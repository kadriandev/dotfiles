#!/usr/bin/env bash

# set -g default-command /usr/local/bin/zsh
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set-option -sa terminal-overrides ",xterm*:Tc"

# List of plugins
set -g @tpm_plugins '             \
  tmux-plugins/tpm                \
  tmux-plugins/tmux-sensible      \
  tmux-plugins/tmux-resurrect     \
  christoomey/vim-tmux-navigator  \
  tmux-plugins/tmux-yank          \
  catppuccin/tmux                 \
'

set -g @catppuccin_window_right_separator "‚ñà¬†"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_default_fill "none"

set -g @catppuccin_window_current_fill "all"

set -g @catppuccin_status_modules_right "session application date_time"
set -g @catppuccin_status_left_separator " ‚ñà"
set -g @catppuccin_status_right_separator "‚ñà"
set -g @catppuccin_status_fill "all"

set -g @catppuccin_date_time_text "%m/%d %H:%M"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_text "#W"

bind-key "t" run-shell "sesh connect \"$(
	sesh list -ti | tail -n +2 | fzf-tmux -p 90%,80% --preview='tmux capture-pane -ep -t {}' \
		--no-sort --ansi --border-label ' sesh ' --prompt 'ü™ü  ' \
		--header '(C-t) Sessions | (C-g) Configs | (C-a) All | (C-x) Zoxide | (C-d) Delete' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list -i | tail -n +2)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -ti | tail -n +2)' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -ci)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
  	--bind 'ctrl-d:execute(tmux kill-session -t {})+reload(sesh list -ti | tail -n +2)'
)\""

set-option -g status-position top
set -g pane-border-status off
set -g base-index 1
set-option -g renumber-windows on
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g mouse on
setw -g monitor-activity on

bind-key - split-window -v
bind-key | split-window -h

bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Reloaded Tmux Config" 

bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# Smart pane switching with awareness of Vim splits.
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|ssh)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.config/tmux/plugins/tpm/tpm'
